以mysql的MyISAM和InnoDB两个存储引擎为例
一个是采用非聚集索引，一个采用了非聚集索引
关于MyISAM
他是以B+Tree作为索引结构，拥有主索引和辅助索引，只是主索引要求key是唯一的，而辅助索引的key可以重复。且其存储的数据与其索引文件是分离的
为什么这样说呢
按照B+Tree搜索算法搜索索引，如果指定的Key存在，则取出其data域的值，然后以data域的值为地址，读取相应数据记录。  因此被称为非聚集


那么innodb 也是以B+Tree作为索引结构但是实现方式却和上述不同
其也有用主索引和辅助索引，而辅助索引都存放的是主键的值而非地址
而且其存储的数据文件本身就是主索引
因为其叶子节点完整的存放了所有的数据


1）InnoDB 支持事务，MyISAM 不支持，InnoDB 将每一条SQL 语句都默认封装成事务进行提交，速度就会因此收到影响，
通过将多条 SQL 语句放在 begin 和 commit 之间，组成一个事务优化，其次事务作为高级处理方式，增删改查就可以回滚；
2）InnoDB 支持外键，而 MyISAM 不支持。
3）InnoDB为默认引擎
4）MyISAM适合查询以及插入为主的应用，InnoDB适合频繁修改以及涉及到安全性较高的应用
5）MyISAM 中 B+ 树的数据结构存储的内容是实际数据的地址值，它的索引和实际数据是分开的，只不过使用索引指向了实际数据。这种索引的模式被称为非聚集索引。
InnoDB 中 B+ 树的数据结构中存储的都是实际的数据，这种索引有被称为聚集索引。
6）InnoDB中不保存表的行数 所以InnoDB需要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可
7）对于自增长的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中可以和其他字段一起建立联合索引
8）清空整个表时，InnoDB是一行一行的删除，效率非常慢。MyISAM则会重建表
9）InnoDB支持行锁
10）InnoDB不支持FULLTEXT类型的索引
